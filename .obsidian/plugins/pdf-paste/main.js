/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var o=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var c=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var h=(n,a)=>{for(var e in a)o(n,e,{get:a[e],enumerable:!0})},u=(n,a,e,t)=>{if(a&&typeof a=="object"||typeof a=="function")for(let s of c(a))!p.call(n,s)&&s!==e&&o(n,s,{get:()=>a[s],enumerable:!(t=g(a,s))||t.enumerable});return n};var w=n=>u(o({},"__esModule",{value:!0}),n);var m={};h(m,{default:()=>d});module.exports=w(m);var i=require("obsidian"),y={mergeHyphenatedWords:!0},d=class extends i.Plugin{async onload(){await this.loadSettings(),this.addCommand({id:"paste-cleaned-text",name:"Paste cleaned text",editorCallback:async(e,t)=>{await this.pasteCleanedText(e)}}),this.registerEvent(this.app.workspace.on("editor-menu",(e,t,s)=>{e.addItem(l=>{l.setIcon("clipboard"),l.setTitle("Paste cleaned text"),l.onClick(async()=>{await this.pasteCleanedText(t)})})})),this.addSettingTab(new r(this.app,this))}onunload(){}async loadSettings(){this.settings=Object.assign({},y,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async pasteCleanedText(e){let t=await navigator.clipboard.readText(),s=this.cleanText(t);e.replaceSelection(s)}cleanText(e){let t=e;return this.settings.mergeHyphenatedWords&&(t=e.replace(/-\s*\n\s*/g,"")),t=t.replace(/(\r\n|\n|\r)/gm," ").replace(/\s{2,}/g," ").trim(),t}},r=class extends i.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new i.Setting(e).setName("Merge hyphenated words").setDesc(`Merge words that are hyphenated across multiple lines. E.g. 'hyphen-
ated' will become 'hyphenated'. Note this could potentially get rid of intentional dashes.`).addToggle(t=>t.setValue(this.plugin.settings.mergeHyphenatedWords).onChange(async s=>{this.plugin.settings.mergeHyphenatedWords=s,await this.plugin.saveSettings()}))}};

/* nosourcemap */